{"ast":null,"code":"var _jsxFileName = \"/Users/ronald.alvin.acuna/Outposter-Assessment/extractor-app/keyword-extractor-frontend/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst KeywordExtractor = () => {\n  _s();\n  const [input, setInput] = useState(\"\");\n  const [keywords, setKeywords] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(\"\");\n  const getKeywords = async () => {\n    if (!input) return;\n    setLoading(true);\n    setError(\"\");\n    try {\n      const response = await axios.post(\"http://localhost:5000/api/keywords\", {\n        input\n      });\n      setKeywords(response.data.keywords);\n    } catch (error) {\n      console.error(\"Error fetching keywords:\", error);\n      setError(\"Failed to fetch keywords. Please try again.\");\n    }\n    setLoading(false);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"p-4 max-w-md mx-auto bg-white rounded shadow-md\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"text-xl font-bold mb-2\",\n      children: \"GPT Keyword Extractor\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      value: input,\n      onChange: e => setInput(e.target.value),\n      placeholder: \"Enter a brand or word...\",\n      className: \"border p-2 w-full mb-2\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: getKeywords,\n      className: \"bg-blue-500 text-white px-4 py-2 rounded w-full\",\n      disabled: loading,\n      children: loading ? \"Loading...\" : \"Get Keywords\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"text-red-500 mt-2\",\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 17\n    }, this), keywords.length > 0 && /*#__PURE__*/_jsxDEV(\"ul\", {\n      className: \"mt-4\",\n      children: keywords.map((keyword, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n        className: \"text-gray-700\",\n        children: keyword\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 13\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 5\n  }, this);\n};\n_s(KeywordExtractor, \"e6RhpFfn3Xybu37oiWJXkkK5eRs=\");\n_c = KeywordExtractor;\nexport default KeywordExtractor;\nvar _c;\n$RefreshReg$(_c, \"KeywordExtractor\");","map":{"version":3,"names":["React","useState","axios","jsxDEV","_jsxDEV","KeywordExtractor","_s","input","setInput","keywords","setKeywords","loading","setLoading","error","setError","getKeywords","response","post","data","console","className","children","fileName","_jsxFileName","lineNumber","columnNumber","type","value","onChange","e","target","placeholder","onClick","disabled","length","map","keyword","index","_c","$RefreshReg$"],"sources":["/Users/ronald.alvin.acuna/Outposter-Assessment/extractor-app/keyword-extractor-frontend/src/App.js"],"sourcesContent":["import React, { useState } from \"react\";\nimport axios from \"axios\";\n\nconst KeywordExtractor = () => {\n  const [input, setInput] = useState(\"\");\n  const [keywords, setKeywords] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(\"\");\n\n  const getKeywords = async () => {\n    if (!input) return;\n    setLoading(true);\n    setError(\"\");\n\n    try {\n      const response = await axios.post(\"http://localhost:5000/api/keywords\", {\n        input,\n      });\n      setKeywords(response.data.keywords);\n    } catch (error) {\n      console.error(\"Error fetching keywords:\", error);\n      setError(\"Failed to fetch keywords. Please try again.\");\n    }\n\n    setLoading(false);\n  };\n\n  return (\n    <div className=\"p-4 max-w-md mx-auto bg-white rounded shadow-md\">\n      <h2 className=\"text-xl font-bold mb-2\">GPT Keyword Extractor</h2>\n      <input\n        type=\"text\"\n        value={input}\n        onChange={(e) => setInput(e.target.value)}\n        placeholder=\"Enter a brand or word...\"\n        className=\"border p-2 w-full mb-2\"\n      />\n      <button\n        onClick={getKeywords}\n        className=\"bg-blue-500 text-white px-4 py-2 rounded w-full\"\n        disabled={loading}\n      >\n        {loading ? \"Loading...\" : \"Get Keywords\"}\n      </button>\n\n      {error && <p className=\"text-red-500 mt-2\">{error}</p>}\n\n      {keywords.length > 0 && (\n        <ul className=\"mt-4\">\n          {keywords.map((keyword, index) => (\n            <li key={index} className=\"text-gray-700\">\n              {keyword}\n            </li>\n          ))}\n        </ul>\n      )}\n    </div>\n  );\n};\n\nexport default KeywordExtractor;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}